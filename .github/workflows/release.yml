name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.ref_name || github.run_id }} release
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  testExtension:
    uses: ./.github/workflows/test-extension.yml
  testJulia:
    uses: ./.github/workflows/test-julia.yml
  deployPreRelease:
    name: Deploy Pre-release Version
    needs: [testExtension, testJulia]
    runs-on: ubuntu-latest
    environment: insider-channel
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: '0'
      - uses: actions/setup-node@v4
        with:
          node-version: 16.x
      - name: Configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - run: npm ci
      - name: Install vsce
        run: npm install -g vsce
      - name: Increase version
        shell: pwsh
        run: |
          $versionnumber = (npm version patch) | Out-String
          echo "VERSION_NUMBER=$($versionnumber.trim())" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Package package
        run: vsce package --pre-release
      - name : Publish git tag
        run: git push --tags
        continue-on-error: true
      - name: Find filename
        shell: pwsh
        run: |
          $filename =  (Get-ChildItem *.vsix)[0].FullName
          echo "PACKAGE_FILENAME=$($filename)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Publish package to VS Code Marketplace
        env:
          VSCEKEY: ${{secrets.VSCEKEY}}
        run: vsce publish --pre-release -p $VSCEKEY --packagePath $PACKAGE_FILENAME
      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: ${{env.PACKAGE_FILENAME}}
          prerelease: true
          tag_name: ${{env.VERSION_NUMBER}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package to Open VSX Marketplace
        env:
          OVSXKEY: ${{secrets.OVSXKEY}}
        run: |
          npx ovsx publish $PACKAGE_FILENAME -p $OVSXKEY
  deployRelease:
    name: Deploy Release Version
    needs: [deployPreRelease]
    runs-on: ubuntu-latest
    environment: release-channel
    steps:
      - name: Compute version
        shell: pwsh
        run: |
          $refname = "${{github.ref_name}}"
          $v = New-Object System.Management.Automation.SemanticVersion($refname.SubString(1))
          $preReleaseVersion = "v" + (New-Object System.Management.Automation.SemanticVersion $v.Major, $v.Minor, ($v.Patch + 1)).ToString()
          echo "PRERELEASE_VERSION_NUMBER=$($preReleaseVersion)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: '0'
          ref: ${{env.PRERELEASE_VERSION_NUMBER}}
      - uses: actions/setup-node@v4
        with:
          node-version: 16.x
      - name: Configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - run: npm ci
      - name: Install vsce
        run: npm install -g vsce
      - name: Increase version
        shell: pwsh
        run: |
          $versionnumber = (npm version patch) | Out-String
          echo "VERSION_NUMBER=$($versionnumber.trim())" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Package package
        run: vsce package
      - name : Publish git tag
        run: git push --tags
        continue-on-error: true
      - name: Find filename
        shell: pwsh
        run: |
          $filename =  (Get-ChildItem *.vsix)[0].FullName
          echo "PACKAGE_FILENAME=$($filename)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Publish package to VS Code Marketplace
        env:
          VSCEKEY: ${{secrets.VSCEKEY}}
        run: |
          vsce publish -p $VSCEKEY --packagePath $PACKAGE_FILENAME
      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: ${{env.PACKAGE_FILENAME}}
          prerelease: false
          tag_name: ${{env.VERSION_NUMBER}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package to Open VSX Marketplace
        env:
          OVSXKEY: ${{secrets.OVSXKEY}}
        run: |
          npx ovsx publish $PACKAGE_FILENAME -p $OVSXKEY
